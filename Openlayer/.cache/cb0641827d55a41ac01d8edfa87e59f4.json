{"id":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","dependencies":[{"name":"/Users/klant/Desktop/Openlayer/node_modules/ol/package.json","includedInParent":true,"mtime":1539329475198},{"name":"/Users/klant/Desktop/Openlayer/package.json","includedInParent":true,"mtime":1541070639289},{"name":"../../../webgl.js","loc":{"line":7,"column":35},"parent":"/Users/klant/Desktop/Openlayer/node_modules/ol/render/webgl/texturereplay/defaultshader.js","resolved":"/Users/klant/Desktop/Openlayer/node_modules/ol/webgl.js"},{"name":"../../../webgl/Fragment.js","loc":{"line":8,"column":26},"parent":"/Users/klant/Desktop/Openlayer/node_modules/ol/render/webgl/texturereplay/defaultshader.js","resolved":"/Users/klant/Desktop/Openlayer/node_modules/ol/webgl/Fragment.js"},{"name":"../../../webgl/Vertex.js","loc":{"line":9,"column":24},"parent":"/Users/klant/Desktop/Openlayer/node_modules/ol/render/webgl/texturereplay/defaultshader.js","resolved":"/Users/klant/Desktop/Openlayer/node_modules/ol/webgl/Vertex.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vertex = exports.fragment = undefined;\n\nvar _webgl = require('../../../webgl.js');\n\nvar _Fragment = require('../../../webgl/Fragment.js');\n\nvar _Fragment2 = _interopRequireDefault(_Fragment);\n\nvar _Vertex = require('../../../webgl/Vertex.js');\n\nvar _Vertex2 = _interopRequireDefault(_Vertex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar fragment = exports.fragment = new _Fragment2.default(_webgl.DEBUG ? 'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' : 'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}'); /**\nmodule ol/render/webgl/texturereplay/defaultshader\nn// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nvar vertex = exports.vertex = new _Vertex2.default(_webgl.DEBUG ? 'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' : 'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map","map":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":7,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":9,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":7}},{"name":"fragment","generated":{"line":20,"column":4},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":11}},{"generated":{"line":20,"column":34},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":22}},{"name":"WebGLFragment","generated":{"line":20,"column":38},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":26}},{"generated":{"line":20,"column":56},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":22}},{"name":"DEBUG_WEBGL","generated":{"line":20,"column":57},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":40}},{"generated":{"line":20,"column":72},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":12,"column":2}},{"generated":{"line":20,"column":441},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":40}},{"generated":{"line":20,"column":444},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":13,"column":2}},{"generated":{"line":20,"column":685},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":22}},{"generated":{"line":20,"column":686},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":11,"column":7}},{"generated":{"line":20,"column":688},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":1,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":4,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":5,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":7}},{"name":"vertex","generated":{"line":26,"column":4},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":11}},{"generated":{"line":26,"column":30},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":20}},{"name":"WebGLVertex","generated":{"line":26,"column":34},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":24}},{"generated":{"line":26,"column":50},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":20}},{"name":"DEBUG_WEBGL","generated":{"line":26,"column":51},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":36}},{"generated":{"line":26,"column":66},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":16,"column":2}},{"generated":{"line":26,"column":740},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":36}},{"generated":{"line":26,"column":743},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":17,"column":2}},{"generated":{"line":26,"column":1062},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":20}},{"generated":{"line":26,"column":1063},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":15,"column":7}},{"generated":{"line":28,"column":0},"source":"../node_modules/ol/render/webgl/texturereplay/defaultshader.js","original":{"line":19,"column":0}}],"sources":{"../node_modules/ol/render/webgl/texturereplay/defaultshader.js":"/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map"},"lineCount":null}},"hash":"d00a13956fa301b7b744abed437901ef","cacheData":{"env":{}}}