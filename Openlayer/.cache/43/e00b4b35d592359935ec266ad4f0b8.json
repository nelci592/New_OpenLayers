{"id":"../node_modules/ol/layer/Image.js","dependencies":[{"name":"/Users/klant/Desktop/Openlayer/node_modules/ol/layer/Image.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/klant/Desktop/Openlayer/package.json","includedInParent":true,"mtime":1542098836324},{"name":"/Users/klant/Desktop/Openlayer/node_modules/ol/package.json","includedInParent":true,"mtime":1539329475198},{"name":"../LayerType.js","loc":{"line":4,"column":22},"parent":"/Users/klant/Desktop/Openlayer/node_modules/ol/layer/Image.js","resolved":"/Users/klant/Desktop/Openlayer/node_modules/ol/LayerType.js"},{"name":"../layer/Layer.js","loc":{"line":5,"column":18},"parent":"/Users/klant/Desktop/Openlayer/node_modules/ol/layer/Image.js","resolved":"/Users/klant/Desktop/Openlayer/node_modules/ol/layer/Layer.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _LayerType = _interopRequireDefault(require(\"../LayerType.js\"));\n\nvar _Layer = _interopRequireDefault(require(\"../layer/Layer.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @module ol/layer/Image\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n\n    this.type = _LayerType.default.IMAGE;\n  }\n\n  if (Layer) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create(Layer && Layer.prototype);\n  ImageLayer.prototype.constructor = ImageLayer;\n  return ImageLayer;\n}(_Layer.default);\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\n\n\nImageLayer.prototype.getSource;\nvar _default = ImageLayer;\nexports.default = _default;","map":{"mappings":[{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":5,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":1,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":6},"generated":{"line":48,"column":4}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":16},"generated":{"line":48,"column":14}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":48,"column":17}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":48,"column":27}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":48,"column":32}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":48,"column":34}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":2},"generated":{"line":49,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":2},"generated":{"line":49,"column":11}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":2},"generated":{"line":49,"column":21}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":14},"generated":{"line":49,"column":22}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":2},"generated":{"line":49,"column":33}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":44,"column":27},"generated":{"line":49,"column":35}},{"source":"../../../src/ol/layer/Image.js","name":"const","original":{"line":45,"column":4},"generated":{"line":50,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":10},"generated":{"line":50,"column":8}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":17},"generated":{"line":50,"column":15}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":20},"generated":{"line":50,"column":18}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":31},"generated":{"line":50,"column":29}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":34},"generated":{"line":50,"column":32}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":31},"generated":{"line":50,"column":43}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":45,"column":48},"generated":{"line":50,"column":46}},{"source":"../../../src/ol/layer/Image.js","name":"const","original":{"line":45,"column":4},"generated":{"line":50,"column":48}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":4}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":9}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":10}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":14}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":46,"column":9},"generated":{"line":51,"column":15}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":19}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":46,"column":10},"generated":{"line":51,"column":21}},{"source":"../../../src/ol/layer/Image.js","name":"super","original":{"line":46,"column":4},"generated":{"line":51,"column":28}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":4},"generated":{"line":58,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":9},"generated":{"line":58,"column":9}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":4},"generated":{"line":58,"column":13}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":16},"generated":{"line":58,"column":16}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":26},"generated":{"line":58,"column":35}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":53,"column":4},"generated":{"line":58,"column":40}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":55,"column":3},"generated":{"line":63,"column":12}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":55,"column":3},"generated":{"line":63,"column":13}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":55,"column":3},"generated":{"line":63,"column":23}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":55,"column":3},"generated":{"line":63,"column":37}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":65,"column":1}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":25},"generated":{"line":65,"column":2}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":30},"generated":{"line":65,"column":16}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":39,"column":0},"generated":{"line":65,"column":17}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":10},"generated":{"line":74,"column":10}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":11},"generated":{"line":74,"column":11}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":0},"generated":{"line":74,"column":20}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":21},"generated":{"line":74,"column":21}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":66,"column":0},"generated":{"line":74,"column":30}},{"source":"../../../src/ol/layer/Image.js","name":null,"original":{"line":67,"column":15},"generated":{"line":75,"column":15}}],"sources":{"../../../src/ol/layer/Image.js":"/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nclass ImageLayer extends Layer {\n\n  /**\n   * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n}\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n"},"lineCount":null}},"hash":"c3ac79812ba74931c281f35da5a74d9c","cacheData":{"env":{}}}