import { NPAS_Options } from "../index";
export declare class Utils {
    /**
     * Create options from here so we can use them both in app and tests.
     * @param {NPAS_Options} options
     * @returns {NPAS_Options}
     */
    static createOptions(options: NPAS_Options): NPAS_Options;
    /**
     * Return the next value from array after "val"
     * @param {number[]} arr
     * @param {number} val
     * @returns {number}
     */
    static getNextAfter(arr: number[], val: number): any;
    /**
     * Return a random value from array
     */
    static arrayRandom(currArray: any[]): any;
    /**
     * Detect if we have a custom router
     *      1   -   default
     *      2   -   user-defined
     *      3   -   default (fallback)
     * @param {string} customRouter
     * @param {string} defaultRouter
     * @returns {number}
     */
    static detectRouterType(customRouter?: string, defaultRouter?: string): number;
    static cleanInputPath(path: string): string;
    /**
     * Find your local network address
     * Exclude by default VMware and Docker networks
     * @param {string} matchAddress
     * @param {string[]} excludeNetworksLike
     * @returns {string}
     */
    getLocalAddress(matchAddress?: string, excludeNetworksLike?: string[]): string;
    static root(...input: any[]): any;
    static getClusters(clustersSet: string | number): number;
    static getValidAddress(host: string, port?: number, returnObject?: boolean): string | {
        host: string;
        port: number;
    };
}
