const assert = require('assert');
const utils = require('../lib/core/utils').Utils;
const router = require('php-built-in-web-server-router');

describe('Serving port strategy', function () {

    let listOfPorts = [1111, 2222, 3333, 4444, 5555];

    let t1_input = 3333;
    let t1_output = 4444;

    let t2_input = listOfPorts[listOfPorts.length - 1];
    let t2_output = listOfPorts[0];

    describe('Serve Next Port:', function () {

        it('should return next port after ' + t1_output, function () {

            assert.equal(utils.getNextAfter(listOfPorts, t1_input), t1_output);

        });

        it('should return first port', function () {

            assert.equal(utils.getNextAfter(listOfPorts, t2_input), t2_output);

        })


    })

});

describe('Detect Router Type', function () {

    let customRouter = "./router/router.wrapper.php";
    let brokenPath = "./someInexistentFile.js";
    let defaultRouter = router.lib;
    let sameFileAsDefaultRouter = defaultRouter;

    it("should return: default", function () {

        assert.equal(utils.detectRouterType(sameFileAsDefaultRouter, defaultRouter), 1);

    });

    it("should return: user-defined", function () {

        assert.equal(utils.detectRouterType(customRouter, defaultRouter), 2);

    });

    it("should return: default (fallback)", function () {

        assert.equal(utils.detectRouterType(brokenPath, defaultRouter), 3);

    });

});
