<?php

class Router_Utils
{

    private $hook_before = "";
    private $hook_before_ok = "";
    private $hook_after = "";
    private $hook_after_ok = "";

    function __construct()
    {

        chdir($_SERVER['DOCUMENT_ROOT']);

        $this->hook_before_ok = isset($_SERVER['NODE_NPAS_HOOK_BEFORE']) &&
            trim(strlen($_SERVER['NODE_NPAS_HOOK_BEFORE'])) > 0 &&
            file_exists($_SERVER['NODE_NPAS_HOOK_BEFORE']) &&
            !is_dir($_SERVER['NODE_NPAS_HOOK_BEFORE']);

        $this->hook_after_ok = isset($_SERVER['NODE_NPAS_HOOK_AFTER']) &&
            trim(strlen($_SERVER['NODE_NPAS_HOOK_AFTER'])) > 0 &&
            file_exists($_SERVER['NODE_NPAS_HOOK_AFTER']) &&
            !is_dir($_SERVER['NODE_NPAS_HOOK_AFTER']);

        if ($this->hook_before_ok) {

            $this->hook_before = $_SERVER['NODE_NPAS_HOOK_BEFORE'];

        }
        if ($this->hook_after_ok) {

            $this->hook_after = $_SERVER['NODE_NPAS_HOOK_AFTER'];

        }

    }

    private function __protocol()
    {

        $https = false;

        if (isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) == 'on') {

            $https = true;

        } elseif (

            !empty($_SERVER['HTTP_X_FORWARDED_PROTO']) &&
            strtolower($_SERVER['HTTP_X_FORWARDED_PROTO']) == 'https'
                                ||
            !empty($_SERVER['HTTP_X_FORWARDED_SSL']) &&
            strtolower($_SERVER['HTTP_X_FORWARDED_SSL']) == 'on'

        ) {

            $https = true;

        }

        return $https ? 'https' : 'http';

    }

    /**
     * Keep Access-Control-Allow-Origin always to SELF
     * some third-party applications (sock.js is what i encountered )
     * will trigger an error if " Access-Control-Allow-Origin: * " is detected.
     */
    function access_control_allow_origin_to_self()
    {

        header_remove('Access-Control-Allow-Origin');
        header_remove('access-control-allow-origin');
        header('Access-Control-Allow-Origin: ' . $this->__protocol() . '://' . $_SERVER['HTTP_HOST'], true);

    }

    public function get_extension($name = "")
    {
        return strrev(strstr(strrev($name), ".", true));
    }

    public function isPHPrequest()
    {

        return strtolower(trim($this->get_extension($_SERVER['SCRIPT_FILENAME']))) === 'php';

    }

    public function hook_before()
    {

        if ($this->isPHPrequest() && $this->hook_before_ok) {

            if ($_SERVER['NODE_NPAS_HOOK_PREVENT_OUTPUT'] == true) {

                ob_start();
                require($this->hook_before);
                ob_end_clean();

            } else {

                require($this->hook_before);

            }

        }


    }

    public function hook_after()
    {

        if ($this->isPHPrequest() && $this->hook_after_ok) {

            if ($_SERVER['NODE_NPAS_HOOK_PREVENT_OUTPUT'] == true) {

                ob_start();
                require($this->hook_after);
                ob_end_clean();

            } else {

                require($this->hook_after);

            }

        }

    }

}
