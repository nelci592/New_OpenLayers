<?php

/************************
 * Scripts before router
 ************************/
$formatVarsToUnix = array('DOCUMENT_ROOT', 'SCRIPT_FILENAME', 'SCRIPT_NAME', 'PHP_SELF');
foreach ($formatVarsToUnix as $var) {
    if (isset($_SERVER[$var])) {
        $_SERVER[$var] = preg_replace('([/\\\]+)', '/', $_SERVER[$var]);
    }
}

chdir($_SERVER['DOCUMENT_ROOT']);

set_include_path(get_include_path() . (DIRECTORY_SEPARATOR == '/' ? ':' : ';') . $_SERVER['DOCUMENT_ROOT']);

if (ini_get('auto_prepend_file') && !in_array(realpath(ini_get('auto_prepend_file')), get_included_files(), true)) {

    include(ini_get('auto_prepend_file'));

}

include(dirname(__FILE__) . '/router.env.php');

$r = preg_replace('([/\\\]+)', '/', trim(strtolower(getenv('NODE_NPAS_ROUTER'))));

$fallbackRouter = preg_replace('([/\\\]+)', '/', trim(strtolower(getenv('NODE_NPAS_ROUTER_DEFAULT'))));
/**
 * FALSE - router doesn't exist
 */
$router = isset($r) && file_exists($r) && !is_dir($r) ? $r : FALSE;

/**
 * We have a custom or default router
 */
$routerObject = "";

if ($router !== FALSE) {

    /**
     * Load Default Router
     */
    if ($router == $fallbackRouter) {

        error_reporting(E_ALL);

        include($fallbackRouter);

        $php_web_server = new PHP_Webserver_Router();

        $php_web_server->indexPath = isset($_SERVER['NODE_NPAS_OPTIONS']['indexFile']) ? $_SERVER['NODE_NPAS_OPTIONS']['indexFile'] : "index.php";

        $routerObject = $php_web_server->listen();

    } else {

        /**
         * Router from User
         */
        $routerObject = include($router);

    }

} else {

    /**
     * Fallback Router
     */
    error_reporting(E_ALL);

    include($fallbackRouter);

    $php_web_server = new PHP_Webserver_Router();

    $php_web_server->indexPath = isset($_SERVER['NODE_NPAS_OPTIONS']['indexFile']) ? $_SERVER['NODE_NPAS_OPTIONS']['indexFile'] : "index.php";

    $routerObject = $php_web_server->listen();

}

/************************
 * Load router
 ************************/

return $routerObject;
